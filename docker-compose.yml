version: '3'
services:
  express:
    environment:
      - NODE_ENV=development
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/usr/src/app
    container_name: recipe-backend
    networks:
      - node
    expose:
      - '3005'
    ports:
      - '3005:3005'
    command: npm run start
  postgres:
    image: postgres:latest
    ports:
      - 5431:5432
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
    volumes:
      - data:/data/db2
    networks:
      - node
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    container_name: elasticsearch
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - node
  proxy:
    image: nginx:alpine
    container_name: nginx
    hostname: nginx
    ports:
      - "80:80"
    volumes:
      - ./proxy.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - express
    networks:
      - node

volumes:
  data:
  elasticsearch-data:
    driver: local
networks:
  node:
    driver: bridge
